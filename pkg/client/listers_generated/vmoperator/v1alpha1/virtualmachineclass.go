/* **********************************************************
 * Copyright 2019 VMware, Inc.  All rights reserved. -- VMware Confidential
 * **********************************************************/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "vmware.com/kubevsphere/pkg/apis/vmoperator/v1alpha1"
)

// VirtualMachineClassLister helps list VirtualMachineClasses.
type VirtualMachineClassLister interface {
	// List lists all VirtualMachineClasses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineClass, err error)
	// VirtualMachineClasses returns an object that can list and get VirtualMachineClasses.
	VirtualMachineClasses(namespace string) VirtualMachineClassNamespaceLister
	VirtualMachineClassListerExpansion
}

// virtualMachineClassLister implements the VirtualMachineClassLister interface.
type virtualMachineClassLister struct {
	indexer cache.Indexer
}

// NewVirtualMachineClassLister returns a new VirtualMachineClassLister.
func NewVirtualMachineClassLister(indexer cache.Indexer) VirtualMachineClassLister {
	return &virtualMachineClassLister{indexer: indexer}
}

// List lists all VirtualMachineClasses in the indexer.
func (s *virtualMachineClassLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualMachineClass))
	})
	return ret, err
}

// VirtualMachineClasses returns an object that can list and get VirtualMachineClasses.
func (s *virtualMachineClassLister) VirtualMachineClasses(namespace string) VirtualMachineClassNamespaceLister {
	return virtualMachineClassNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualMachineClassNamespaceLister helps list and get VirtualMachineClasses.
type VirtualMachineClassNamespaceLister interface {
	// List lists all VirtualMachineClasses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineClass, err error)
	// Get retrieves the VirtualMachineClass from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VirtualMachineClass, error)
	VirtualMachineClassNamespaceListerExpansion
}

// virtualMachineClassNamespaceLister implements the VirtualMachineClassNamespaceLister
// interface.
type virtualMachineClassNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualMachineClasses in the indexer for a given namespace.
func (s virtualMachineClassNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineClass, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualMachineClass))
	})
	return ret, err
}

// Get retrieves the VirtualMachineClass from the indexer for a given namespace and name.
func (s virtualMachineClassNamespaceLister) Get(name string) (*v1alpha1.VirtualMachineClass, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualmachineclass"), name)
	}
	return obj.(*v1alpha1.VirtualMachineClass), nil
}
