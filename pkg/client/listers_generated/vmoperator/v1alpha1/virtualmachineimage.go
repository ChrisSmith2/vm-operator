/* **********************************************************
 * Copyright 2019 VMware, Inc.  All rights reserved. -- VMware Confidential
 * **********************************************************/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/vmware-tanzu/vm-operator/pkg/apis/vmoperator/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualMachineImageLister helps list VirtualMachineImages.
type VirtualMachineImageLister interface {
	// List lists all VirtualMachineImages in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineImage, err error)
	// VirtualMachineImages returns an object that can list and get VirtualMachineImages.
	VirtualMachineImages(namespace string) VirtualMachineImageNamespaceLister
	VirtualMachineImageListerExpansion
}

// virtualMachineImageLister implements the VirtualMachineImageLister interface.
type virtualMachineImageLister struct {
	indexer cache.Indexer
}

// NewVirtualMachineImageLister returns a new VirtualMachineImageLister.
func NewVirtualMachineImageLister(indexer cache.Indexer) VirtualMachineImageLister {
	return &virtualMachineImageLister{indexer: indexer}
}

// List lists all VirtualMachineImages in the indexer.
func (s *virtualMachineImageLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineImage, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualMachineImage))
	})
	return ret, err
}

// VirtualMachineImages returns an object that can list and get VirtualMachineImages.
func (s *virtualMachineImageLister) VirtualMachineImages(namespace string) VirtualMachineImageNamespaceLister {
	return virtualMachineImageNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualMachineImageNamespaceLister helps list and get VirtualMachineImages.
type VirtualMachineImageNamespaceLister interface {
	// List lists all VirtualMachineImages in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineImage, err error)
	// Get retrieves the VirtualMachineImage from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VirtualMachineImage, error)
	VirtualMachineImageNamespaceListerExpansion
}

// virtualMachineImageNamespaceLister implements the VirtualMachineImageNamespaceLister
// interface.
type virtualMachineImageNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualMachineImages in the indexer for a given namespace.
func (s virtualMachineImageNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualMachineImage, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualMachineImage))
	})
	return ret, err
}

// Get retrieves the VirtualMachineImage from the indexer for a given namespace and name.
func (s virtualMachineImageNamespaceLister) Get(name string) (*v1alpha1.VirtualMachineImage, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualmachineimage"), name)
	}
	return obj.(*v1alpha1.VirtualMachineImage), nil
}
