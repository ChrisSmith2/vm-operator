/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by apiregister-gen. Do not edit it manually!

package v1alpha1

import (
	"github.com/kubernetes-incubator/apiserver-builder-alpha/pkg/builders"
	"gitlab.eng.vmware.com/iaas-platform/vm-operator/pkg/apis/vmoperator"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

var (
	vmoperatorVirtualMachineStorage = builders.NewApiResource( // Resource status endpoint
		vmoperator.InternalVirtualMachine,
		VirtualMachineSchemeFns{},
		func() runtime.Object { return &VirtualMachine{} },     // Register versioned resource
		func() runtime.Object { return &VirtualMachineList{} }, // Register versioned resource list
		&VirtualMachineStrategy{builders.StorageStrategySingleton},
	)
	vmoperatorVirtualMachineClassStorage = builders.NewApiResource( // Resource status endpoint
		vmoperator.InternalVirtualMachineClass,
		VirtualMachineClassSchemeFns{},
		func() runtime.Object { return &VirtualMachineClass{} },     // Register versioned resource
		func() runtime.Object { return &VirtualMachineClassList{} }, // Register versioned resource list
		&VirtualMachineClassStrategy{builders.StorageStrategySingleton},
	)
	vmoperatorVirtualMachineImageStorage = builders.NewApiResourceWithStorage( // Resource status endpoint
		vmoperator.InternalVirtualMachineImage,
		VirtualMachineImageSchemeFns{},
		func() runtime.Object { return &VirtualMachineImage{} },     // Register versioned resource
		func() runtime.Object { return &VirtualMachineImageList{} }, // Register versioned resource list
		NewVirtualMachineImagesREST,
	)
	vmoperatorVirtualMachineServiceStorage = builders.NewApiResource( // Resource status endpoint
		vmoperator.InternalVirtualMachineService,
		VirtualMachineServiceSchemeFns{},
		func() runtime.Object { return &VirtualMachineService{} },     // Register versioned resource
		func() runtime.Object { return &VirtualMachineServiceList{} }, // Register versioned resource list
		&VirtualMachineServiceStrategy{builders.StorageStrategySingleton},
	)
	ApiVersion = builders.NewApiVersion("vmoperator.vmware.com", "v1alpha1").WithResources(
		vmoperatorVirtualMachineStorage,
		builders.NewApiResource( // Resource status endpoint
			vmoperator.InternalVirtualMachineStatus,
			VirtualMachineSchemeFns{},
			func() runtime.Object { return &VirtualMachine{} },     // Register versioned resource
			func() runtime.Object { return &VirtualMachineList{} }, // Register versioned resource list
			&VirtualMachineStatusStrategy{builders.StatusStorageStrategySingleton},
		), vmoperatorVirtualMachineClassStorage,
		builders.NewApiResource( // Resource status endpoint
			vmoperator.InternalVirtualMachineClassStatus,
			VirtualMachineClassSchemeFns{},
			func() runtime.Object { return &VirtualMachineClass{} },     // Register versioned resource
			func() runtime.Object { return &VirtualMachineClassList{} }, // Register versioned resource list
			&VirtualMachineClassStatusStrategy{builders.StatusStorageStrategySingleton},
		), vmoperatorVirtualMachineImageStorage,
		vmoperatorVirtualMachineServiceStorage,
		builders.NewApiResource( // Resource status endpoint
			vmoperator.InternalVirtualMachineServiceStatus,
			VirtualMachineServiceSchemeFns{},
			func() runtime.Object { return &VirtualMachineService{} },     // Register versioned resource
			func() runtime.Object { return &VirtualMachineServiceList{} }, // Register versioned resource list
			&VirtualMachineServiceStatusStrategy{builders.StatusStorageStrategySingleton},
		))

	// Required by code generated by go2idl
	AddToScheme        = ApiVersion.SchemaBuilder.AddToScheme
	SchemeBuilder      = ApiVersion.SchemaBuilder
	localSchemeBuilder = &SchemeBuilder
	SchemeGroupVersion = ApiVersion.GroupVersion
)

// Required by code generated by go2idl
// Kind takes an unqualified kind and returns a Group qualified GroupKind
func Kind(kind string) schema.GroupKind {
	return SchemeGroupVersion.WithKind(kind).GroupKind()
}

// Required by code generated by go2idl
// Resource takes an unqualified resource and returns a Group qualified GroupResource
func Resource(resource string) schema.GroupResource {
	return SchemeGroupVersion.WithResource(resource).GroupResource()
}

//
// VirtualMachine Functions and Structs
//
// +k8s:deepcopy-gen=false
type VirtualMachineSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type VirtualMachineStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type VirtualMachineStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type VirtualMachineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachine `json:"items"`
}

//
// VirtualMachineClass Functions and Structs
//
// +k8s:deepcopy-gen=false
type VirtualMachineClassSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type VirtualMachineClassStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type VirtualMachineClassStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type VirtualMachineClassList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineClass `json:"items"`
}

//
// VirtualMachineImage Functions and Structs
//
// +k8s:deepcopy-gen=false
type VirtualMachineImageSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type VirtualMachineImageStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type VirtualMachineImageStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type VirtualMachineImageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineImage `json:"items"`
}

//
// VirtualMachineService Functions and Structs
//
// +k8s:deepcopy-gen=false
type VirtualMachineServiceSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type VirtualMachineServiceStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type VirtualMachineServiceStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type VirtualMachineServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineService `json:"items"`
}
